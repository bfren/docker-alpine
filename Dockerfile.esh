FROM --platform=${BUILDPLATFORM} golang:alpine AS build

ARG TARGETPLATFORM
ARG BUILDPLATFORM

RUN \
    # save build and version information to log
    echo "Build Arch: ${BUILDPLATFORM}" > /log && \
    echo "Target Arch: ${TARGETPLATFORM}" >> /log && \
    echo "Alpine: <%= ${ALPINE_VERSION} %>" >> /log && \
    echo "Nushell: <%= ${NUSHELL_VERSION} %>" >> /log

FROM ghcr.io/bfren/nushell:<%= ${NUSHELL_VERSION} %>-alpine as nushell

FROM alpine:<%= ${ALPINE_VERSION} %>
COPY --from=build /log /etc/bf/BUILD
COPY --from=nushell / /

LABEL org.opencontainers.image.description="Alpine base image with Nushell."
LABEL org.opencontainers.image.source="https://github.com/bfren/docker-alpine"

ARG BF_IMAGE
ARG BF_VERSION
ARG NUSHELL_VERSION=<%= ${NUSHELL_VERSION} %>

ENV \
    # debug log output
    #   0: disable
    #   1: enable
    BF_DEBUG=0 \
    # path to bf executables
    BF_BIN=/usr/bin/bf \
    # path to bf configuration
    BF_ETC=/etc/bf \
    # upgrade packages during installation
    BF_UPGRADE_PACKAGES=0

ENV \
    # add bf executables to PATH
    PATH=${BF_BIN}:${PATH}

COPY ./overlay /
COPY ./<%= ${ALPINE_EDITION} %>/overlay /

RUN chmod +x /preinstall && /preinstall
RUN bf-install

ENTRYPOINT [ "/init" ]
